version: '3'
services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb-local
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
      MONGO_INITDB_DATABASE: ss-test-onestack
    ports:
      - "27018:27017"
    volumes:
      - ./mongodata:/data/db

  elasticsearch: 
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    ports:
      - ${ES_PORT}:${ES_PORT}
    environment:
      discovery.type: 'single-node'
      cluster.name: ${CLUSTER_NAME}
      xpack.security.enabled: 'true'
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1

  smartsearch-distroless:
    depends_on: 
      - elasticsearch
      - mongodb
    build:
      context: .
      dockerfile: Dockerfile.distroless
    environment:
      - MONGODB_ADMIN_DATABASE=${MONGODB_ADMIN_DATABASE}
      - MONGODB_URI=${MONGODB_URI}
      - INTERNAL_SEARCH_ENGINE_ENABLED=${INTERNAL_SEARCH_ENGINE_ENABLED}
      - INTERNAL_SEARCH_ENGINE_PASSWORD=${INTERNAL_SEARCH_ENGINE_PASSWORD}
      - INTERNAL_SEARCH_ENGINE_URL=${INTERNAL_SEARCH_ENGINE_URL}
      - INTERNAL_SEARCH_ENGINE_VERSION=${ELASTIC_VERSION}
      - CACHE_TYPE=${CACHE_TYPE}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_BUCKET_PREFIX=${AWS_BUCKET_PREFIX}
      - AWS_CREDENTIALS_ACCESS_KEY=${AWS_CREDENTIALS_ACCESS_KEY}
      - AWS_CREDENTIALS_SECRET_KEY=${AWS_CREDENTIALS_SECRET_KEY}
      - AWS_CREDENTIALS_REGION=${AWS_CREDENTIALS_REGION}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_LIVE_TIME=${REDIS_LIVE_TIME}
    ports:
      - 9080:9080
      - 9081:9081
      - 9085:9085
    volumes:
      - ./logs:/tmp
